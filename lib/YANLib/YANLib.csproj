<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFramework>net8.0</TargetFramework>
		<ImplicitUsings>enable</ImplicitUsings>
		<Nullable>enable</Nullable>
		<ApplicationIcon>ic.ico</ApplicationIcon>
		<GeneratePackageOnBuild>True</GeneratePackageOnBuild>
		<Title>YANLib</Title>
		<Authors>Yami An</Authors>
		<Company>YAN</Company>
		<Description>YANLib (YAMI AN NEPHILIM LIBRARY) is a comprehensive .NET utility library providing powerful extension methods that enhance developer productivity. Built on .NET 6.0 LTS, it offers high-performance utilities for JSON serialization, text manipulation, object validation, task coordination, mathematical operations, DateTime handling, and more.

Key features:
• YANJson: High-performance JSON serialization with robust error handling
• YANText: String manipulation, validation, and transformation with null safety
• YANObject: Object validation, property analysis, and deep copying
• YANTask: Enhanced task coordination with conditional waiting and error handling
• YANUnmanaged: Type parsing and conversion with built-in error handling
• YANRandom: Random value generation for various types and collections
• YANMath: Mathematical operations with null handling and type conversion
• YANDateTime: Time zone conversion and date calculations
• YANProcess: Process management utilities
• YANExpression: Dynamic property access and expression tree utilities

All components feature fluent APIs, robust null handling, collection support, and performance optimizations. YANLib simplifies common programming tasks while maintaining high performance, making it an essential toolkit for .NET developers.</Description>
		<Copyright>Copyright ©  2023</Copyright>
		<PackageIcon>icon.png</PackageIcon>
		<PackageProjectUrl>https://github.com/Tynab</PackageProjectUrl>
		<RepositoryUrl>https://github.com/Tynab/YANLib</RepositoryUrl>
		<PackageTags>C#, .NET, Library</PackageTags>
		<PackAsTool>False</PackAsTool>
		<PackageReadmeFile>README.md</PackageReadmeFile>
		<RepositoryType>git</RepositoryType>
		<PackageReleaseNotes>## YANLib 8.0.0 - Complete Rebuild for .NET 8

### Breaking Changes
- Complete rebuild targeting .NET 8
- All previous extensions are now obsolete
- New namespace structure and API design
- Not backward compatible with previous versions

### New Features
- Rebuilt components with modern architecture: YANJson, YANUnmanaged, YANRandom, YANTask, YANText, YANObject, YANProcess, YANMath, YANDateTime, YANExpression
- Consistent null handling and collection operations
- Enhanced generic type support
- Thread-safety improvements

### Performance
- Significant performance improvements across all components
- Reduced memory allocations
- Optimized algorithms and caching strategies

See full documentation at: https://github.com/Tynab/YANLib/wiki</PackageReleaseNotes>
		<PackageLicenseExpression>MIT</PackageLicenseExpression>
		<PackageRequireLicenseAcceptance>False</PackageRequireLicenseAcceptance>
		<PackageId>Tynab.YANLib</PackageId>
		<Version>8.0.0</Version>
		<LangVersion>preview</LangVersion>
		<ProduceReferenceAssembly>True</ProduceReferenceAssembly>
		<IsPackable>true</IsPackable>
		<IncludeBuildOutput>true</IncludeBuildOutput>
	</PropertyGroup>

	<ItemGroup>
		<Content Include="ic.ico" />
	</ItemGroup>

	<ItemGroup>
		<None Include="..\..\README.md">
			<Pack>True</Pack>
			<PackagePath>\</PackagePath>
		</None>
		<None Include="..\..\res\icon.png">
			<Pack>True</Pack>
			<PackagePath>\</PackagePath>
		</None>
	</ItemGroup>

	<ItemGroup>
		<ProjectReference Include="..\YANLib.Implementation\YANLib.Implementation.csproj" />
	</ItemGroup>

	<ItemGroup>
		<None Include="..\YANLib.Implementation\bin\$(Configuration)\$(TargetFramework)\YANLib.Implementation.dll" Pack="true" PackagePath="lib\$(TargetFramework)" Visible="false" />
	</ItemGroup>

</Project>
